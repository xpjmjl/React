{"ast":null,"code":"var _jsxFileName = \"/Users/xpj/Desktop/React/demo01/src/Xiaojiejie.js\";\nimport React, { Component, Fragment } from 'react';\nimport './style.css';\nimport Xioajiejieitem from './Xiaojiejieitem';\n\nclass Xiaojiejie extends Component {\n  //数据初始化\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      list: ['基础按摩', '精油推背']\n    };\n  } //最先执行\n\n\n  componentWillMount() {\n    console.log(\"componentWillMount\");\n  } //在render之后执行\n\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n  }\n\n  componentWillReceiveProps() {\n    console.log('componentWillReceiveProps');\n  } //更新第一个执行\n\n\n  shouldComponentUpdate() {\n    console.log(\"shouldComponentUpdate\");\n    return true;\n  } //更新第二个执行\n\n\n  componentWillUpdate() {\n    console.log('componentWillUpdate');\n    return true;\n  } //在render之后执行\n\n\n  componentDidUpdate() {\n    console.log('componentDidUpdate');\n    return true;\n  } //在componentWillMount之后执行，或者刷新prop和state时执行\n\n\n  render() {\n    console.log(\"render\");\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"jspang\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"\\u589E\\u52A0\\u670D\\u52A1\\uFF1A\"), React.createElement(\"input\", {\n      id: \"jspang\",\n      className: \"input\",\n      value: this.state.inputValue,\n      onChange: this.inputChange.bind(this),\n      ref: input => {\n        this.input = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.addList.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"\\u589E\\u52A0\\u670D\\u52A1\")), React.createElement(\"ul\", {\n      ref: ul => {\n        this.ul = ul;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.list.map((item, index) => {\n      return React.createElement(Xioajiejieitem, {\n        key: index + item,\n        index: index,\n        content: item,\n        deleteItem: this.deleteItem.bind(this),\n        list: this.state.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    })));\n  }\n\n  inputChange(e) {\n    // console.log(e.target.value)\n    this.setState({\n      inputValue: this.input.value\n    });\n  } //增加列表\n\n\n  addList() {\n    this.setState({\n      list: [...this.state.list, this.state.inputValue],\n      inputValue: ''\n    }, () => {\n      console.log(this.ul.querySelectorAll('li').length);\n    });\n  } //删除列表项\n\n\n  deleteItem(index) {\n    // console.log(index)\n    let list = this.state.list;\n    list.splice(index, 1);\n    this.setState({\n      list: list\n    });\n  }\n\n}\n\nexport default Xiaojiejie;","map":{"version":3,"sources":["/Users/xpj/Desktop/React/demo01/src/Xiaojiejie.js"],"names":["React","Component","Fragment","Xioajiejieitem","Xiaojiejie","constructor","props","state","inputValue","list","componentWillMount","console","log","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","render","inputChange","bind","input","addList","ul","map","item","index","deleteItem","e","setState","value","querySelectorAll","length","splice"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAO,aAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAkC;AAC9B;AACAI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,UAAU,EAAC,EADJ;AAEPC,MAAAA,IAAI,EAAC,CAAC,MAAD,EAAQ,MAAR;AAFE,KAAX;AAIH,GAR6B,CAU9B;;;AACAC,EAAAA,kBAAkB,GAAE;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,GAb6B,CAe9B;;;AACAC,EAAAA,iBAAiB,GAAG;AAChBF,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;;AAEDE,EAAAA,yBAAyB,GAAE;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH,GAtB6B,CAwB9B;;;AACAG,EAAAA,qBAAqB,GAAE;AACnBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,WAAO,IAAP;AACH,GA5B6B,CA8B9B;;;AACAI,EAAAA,mBAAmB,GAAE;AACjBL,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,WAAO,IAAP;AACH,GAlC6B,CAoC9B;;;AACAK,EAAAA,kBAAkB,GAAE;AAChBN,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,WAAO,IAAP;AACH,GAxC6B,CA2C9B;;;AACAM,EAAAA,MAAM,GAAE;AACJP,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,EAEI;AACI,MAAA,EAAE,EAAC,QADP;AAEI,MAAA,SAAS,EAAC,OAFd;AAGI,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,UAHtB;AAII,MAAA,QAAQ,EAAE,KAAKW,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAJd;AAKI,MAAA,GAAG,EAAGC,KAAD,IAAS;AAAC,aAAKA,KAAL,GAAWA,KAAX;AAAiB,OALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAQI;AAAQ,MAAA,OAAO,EAAE,KAAKC,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCARJ,CAFJ,EAYI;AAAI,MAAA,GAAG,EAAGG,EAAD,IAAM;AAAC,aAAKA,EAAL,GAAQA,EAAR;AAAW,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKhB,KAAL,CAAWE,IAAX,CAAgBe,GAAhB,CAAoB,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC9B,aACQ,oBAAC,cAAD;AACI,QAAA,GAAG,EAAEA,KAAK,GAACD,IADf;AAEI,QAAA,KAAK,EAAEC,KAFX;AAGI,QAAA,OAAO,EAAED,IAHb;AAII,QAAA,UAAU,EAAE,KAAKE,UAAL,CAAgBP,IAAhB,CAAqB,IAArB,CAJhB;AAKI,QAAA,IAAI,EAAE,KAAKb,KAAL,CAAWE,IALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR;AASH,KAVD,CAFR,CAZJ,CADJ;AA8BH;;AAEDU,EAAAA,WAAW,CAACS,CAAD,EAAI;AACX;AACA,SAAKC,QAAL,CAAc;AACVrB,MAAAA,UAAU,EAAC,KAAKa,KAAL,CAAWS;AADZ,KAAd;AAGH,GAnF6B,CAqF9B;;;AACAR,EAAAA,OAAO,GAAE;AACL,SAAKO,QAAL,CAAc;AACVpB,MAAAA,IAAI,EAAC,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,EAAoB,KAAKF,KAAL,CAAWC,UAA/B,CADK;AAEVA,MAAAA,UAAU,EAAC;AAFD,KAAd,EAGE,MAAI;AACFG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKW,EAAL,CAAQQ,gBAAR,CAAyB,IAAzB,EAA+BC,MAA3C;AACH,KALD;AAMH,GA7F6B,CA+F9B;;;AACAL,EAAAA,UAAU,CAACD,KAAD,EAAO;AACb;AACA,QAAIjB,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAtB;AACAA,IAAAA,IAAI,CAACwB,MAAL,CAAYP,KAAZ,EAAkB,CAAlB;AACA,SAAKG,QAAL,CAAc;AACVpB,MAAAA,IAAI,EAACA;AADK,KAAd;AAGH;;AAvG6B;;AAyGlC,eAAeL,UAAf","sourcesContent":["import React,{Component,Fragment} from 'react'\nimport './style.css'\nimport Xioajiejieitem from './Xiaojiejieitem'\n\nclass Xiaojiejie extends Component{\n    //数据初始化\n    constructor(props){\n        super(props)\n        this.state={\n            inputValue:'',\n            list:['基础按摩','精油推背']\n        }\n    }\n\n    //最先执行\n    componentWillMount(){\n        console.log(\"componentWillMount\")\n    }\n\n    //在render之后执行\n    componentDidMount() {\n        console.log(\"componentDidMount\")\n    }\n\n    componentWillReceiveProps(){\n        console.log('componentWillReceiveProps')\n    }\n\n    //更新第一个执行\n    shouldComponentUpdate(){\n        console.log(\"shouldComponentUpdate\")\n        return true\n    }\n\n    //更新第二个执行\n    componentWillUpdate(){\n        console.log('componentWillUpdate')\n        return true\n    }\n\n    //在render之后执行\n    componentDidUpdate(){\n        console.log('componentDidUpdate')\n        return true\n    }\n\n\n    //在componentWillMount之后执行，或者刷新prop和state时执行\n    render(){\n        console.log(\"render\")\n        return  (\n            <Fragment>\n                {/* 第一次写注释 */}\n                <div>\n                    <label htmlFor=\"jspang\">增加服务：</label>\n                    <input \n                        id=\"jspang\" \n                        className='input' \n                        value={this.state.inputValue} \n                        onChange={this.inputChange.bind(this)} \n                        ref={(input)=>{this.input=input}} />\n                    <button onClick={this.addList.bind(this)}>增加服务</button>\n                </div>\n                <ul ref={(ul)=>{this.ul=ul}}>\n                    {\n                        this.state.list.map((item,index)=>{\n                            return (\n                                    <Xioajiejieitem\n                                        key={index+item} \n                                        index={index} \n                                        content={item} \n                                        deleteItem={this.deleteItem.bind(this)} \n                                        list={this.state.list} \n                                    />\n                            )\n                        })\n                    }\n                </ul>\n            </Fragment>\n        )\n    }\n\n    inputChange(e) {\n        // console.log(e.target.value)\n        this.setState({\n            inputValue:this.input.value\n        })\n    }\n\n    //增加列表\n    addList(){\n        this.setState({\n            list:[...this.state.list,this.state.inputValue],\n            inputValue:''\n        },()=>{\n            console.log(this.ul.querySelectorAll('li').length)\n        })\n    }\n\n    //删除列表项\n    deleteItem(index){\n        // console.log(index)\n        let list = this.state.list\n        list.splice(index,1)\n        this.setState({\n            list:list\n        })\n    }\n}\nexport default Xiaojiejie "]},"metadata":{},"sourceType":"module"}