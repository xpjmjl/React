{"version":3,"sources":["Xiaojiejieitem.js","Xiaojiejie.js","index.js"],"names":["XiaojiejieItem","props","handleClick","bind","console","log","onClick","this","avname","content","deleteItem","index","Component","defaultProps","Xiaojiejie","state","inputValue","list","axios","post","then","res","JSON","stringify","catch","error","htmlFor","id","className","value","onChange","inputChange","ref","input","addList","ul","map","item","key","e","setState","querySelectorAll","length","splice","ReactDOM","render","document","getElementById"],"mappings":"gQAIMA,E,YAEF,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,YAAY,EAAKA,YAAYC,KAAjB,gBAFH,E,yFAQdC,QAAQC,IAAI,uC,+BAIZ,OACI,wBAAIC,QAASC,KAAKL,aACbK,KAAKN,MAAMO,OAASD,KAAKN,MAAMQ,W,oCAKxCF,KAAKN,MAAMS,WAAWH,KAAKN,MAAMU,W,GArBZC,aAiC7BZ,EAAea,aAAa,CACxBL,OAAO,QAGIR,Q,iBC4EAc,E,YA9GX,WAAYb,GAAO,IAAD,8BACd,4CAAMA,KACDc,MAAM,CACPC,WAAW,GACXC,KAAK,CAAC,2BAAO,6BAJH,E,kFAUdb,QAAQC,IAAI,wB,0CAKZD,QAAQC,IAAI,qBACZa,IAAMC,KAAK,+CACNC,MAAK,SAACC,GACHjB,QAAQC,IAAI,8CAAgBiB,KAAKC,UAAUF,OAE9CG,OAAM,SAACC,GACJrB,QAAQC,IAAI,6CAAeoB,Q,kDAKnCrB,QAAQC,IAAI,+B,8CAMZ,OADAD,QAAQC,IAAI,0BACL,I,4CAMP,OADAD,QAAQC,IAAI,wBACL,I,2CAMP,OADAD,QAAQC,IAAI,uBACL,I,+BAKF,IAAD,OAEJ,OADAD,QAAQC,IAAI,UAER,kBAAC,WAAD,KAEI,6BACI,2BAAOqB,QAAQ,UAAf,kCACA,2BACIC,GAAG,SACHC,UAAU,QACVC,MAAOtB,KAAKQ,MAAMC,WAClBc,SAAUvB,KAAKwB,YAAY5B,KAAKI,MAChCyB,IAAK,SAACC,GAAS,EAAKA,MAAMA,KAC9B,4BAAQ3B,QAASC,KAAK2B,QAAQ/B,KAAKI,OAAnC,6BAEJ,wBAAIyB,IAAK,SAACG,GAAM,EAAKA,GAAGA,IAEhB5B,KAAKQ,MAAME,KAAKmB,KAAI,SAACC,EAAK1B,GACtB,OACQ,kBAAC,EAAD,CACI2B,IAAK3B,EAAM0B,EACX1B,MAAOA,EACPF,QAAS4B,EACT3B,WAAY,EAAKA,WAAWP,KAAK,GACjCc,KAAM,EAAKF,MAAME,c,kCAUzCsB,GAERhC,KAAKiC,SAAS,CACVxB,WAAWT,KAAK0B,MAAMJ,U,gCAKpB,IAAD,OACLtB,KAAKiC,SAAS,CACVvB,KAAK,GAAD,mBAAKV,KAAKQ,MAAME,MAAhB,CAAqBV,KAAKQ,MAAMC,aACpCA,WAAW,KACb,WACEZ,QAAQC,IAAI,EAAK8B,GAAGM,iBAAiB,MAAMC,a,iCAKxC/B,GAEP,IAAIM,EAAOV,KAAKQ,MAAME,KACtBA,EAAK0B,OAAOhC,EAAM,GAClBJ,KAAKiC,SAAS,CACVvB,KAAKA,Q,GA5GQL,aCEzBgC,IAASC,OAAO,kBAAC,EAAD,MAAcC,SAASC,eAAe,W","file":"static/js/main.a49ad89c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\n\n\nclass XiaojiejieItem extends Component {\n\n    constructor(props){\n        super(props)\n        this.handleClick=this.handleClick.bind(this)\n    }\n\n    //组件第一次存在dom中，函数是不会执行的\n    //如果已经存在于dom中，函数才会被执行的\n    componentWillReceiveProps(){\n        console.log('child - componentWillReceiveProps')\n    }\n\n    render() { \n        return ( \n            <li onClick={this.handleClick}>\n                {this.props.avname + this.props.content}\n            </li>\n        );\n    }\n    handleClick(){\n        this.props.deleteItem(this.props.index)\n    }\n}\n\n//类型校验\nXiaojiejieItem.propTypes={\n    avname:PropTypes.string.isRequired,//比传\n    content:PropTypes.string,\n    deleteItem:PropTypes.func,\n    index:PropTypes.number\n}\n//默认值\nXiaojiejieItem.defaultProps={\n    avname:'song'\n}\n \nexport default XiaojiejieItem;","import React,{Component,Fragment} from 'react'\nimport './style.css'\nimport Xioajiejieitem from './Xiaojiejieitem'\nimport axios from 'axios'\n\nclass Xiaojiejie extends Component{\n    //数据初始化\n    constructor(props){\n        super(props)\n        this.state={\n            inputValue:'',\n            list:['基础按摩','精油推背']\n        }\n    }\n\n    //最先执行\n    componentWillMount(){\n        console.log(\"componentWillMount\")\n    }\n\n    //在render之后执行\n    componentDidMount() {\n        console.log(\"componentDidMount\")\n        axios.post('https://web-api.juejin.im/v3/web/wbbr/bgeda')\n            .then((res)=>{\n                console.log('axios 获取数据成功:'+JSON.stringify(res))\n            })\n            .catch((error)=>{\n                console.log('axios 获取数据失败'+error)\n            })\n    }\n\n    componentWillReceiveProps(){\n        console.log('componentWillReceiveProps')\n    }\n\n    //更新第一个执行\n    shouldComponentUpdate(){\n        console.log(\"shouldComponentUpdate\")\n        return true\n    }\n\n    //更新第二个执行\n    componentWillUpdate(){\n        console.log('componentWillUpdate')\n        return true\n    }\n\n    //在render之后执行\n    componentDidUpdate(){\n        console.log('componentDidUpdate')\n        return true\n    }\n\n\n    //在componentWillMount之后执行，或者刷新prop和state时执行\n    render(){\n        console.log(\"render\")\n        return  (\n            <Fragment>\n                {/* 第一次写注释 */}\n                <div>\n                    <label htmlFor=\"jspang\">增加服务：</label>\n                    <input \n                        id=\"jspang\" \n                        className='input' \n                        value={this.state.inputValue} \n                        onChange={this.inputChange.bind(this)} \n                        ref={(input)=>{this.input=input}} />\n                    <button onClick={this.addList.bind(this)}>增加服务</button>\n                </div>\n                <ul ref={(ul)=>{this.ul=ul}}>\n                    {\n                        this.state.list.map((item,index)=>{\n                            return (\n                                    <Xioajiejieitem\n                                        key={index+item} \n                                        index={index} \n                                        content={item} \n                                        deleteItem={this.deleteItem.bind(this)} \n                                        list={this.state.list} \n                                    />\n                            )\n                        })\n                    }\n                </ul>\n            </Fragment>\n        )\n    }\n\n    inputChange(e) {\n        // console.log(e.target.value)\n        this.setState({\n            inputValue:this.input.value\n        })\n    }\n\n    //增加列表\n    addList(){\n        this.setState({\n            list:[...this.state.list,this.state.inputValue],\n            inputValue:''\n        },()=>{\n            console.log(this.ul.querySelectorAll('li').length)\n        })\n    }\n\n    //删除列表项\n    deleteItem(index){\n        // console.log(index)\n        let list = this.state.list\n        list.splice(index,1)\n        this.setState({\n            list:list\n        })\n    }\n}\nexport default Xiaojiejie ","import React from 'react'\nimport ReactDOM from 'react-dom'\n// import App from './App'//自定义组件第一个字母大写\nimport Xiaojiejie from './Xiaojiejie'\n\n//JSX..javascript xml \n// ReactDOM.render(<App/>,document.getElementById('root'))\nReactDOM.render(<Xiaojiejie/>,document.getElementById('root'))"],"sourceRoot":""}